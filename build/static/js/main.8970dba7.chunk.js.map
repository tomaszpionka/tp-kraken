{"version":3,"sources":["App.js","index.js"],"names":["App","useState","includeUppercaseElement","setUppercaseElement","includeNumbersElement","setNumbersElement","includeSymbolsElement","setSymbolsElement","passwordDisplay","setDisplay","UPPERCASE_CHAR_CODES","arrayFromLowToHigh","LOWERCASE_CHAR_CODES","NUMBER_CHAR_CODES","SYMBOL_CHAR_CODES","concat","low","high","array","i","push","Segment","placeholder","Container","Grid","style","height","verticalAlign","Column","maxWidth","Header","as","color","Icon","name","Content","Subheader","Form","size","marginTop","Field","Checkbox","toggle","label","onClick","Button","fluid","e","preventDefault","password","characterAmount","includeUppercase","includeNumbers","includeSymbols","charCodes","passwordCharacters","characterCode","Math","floor","random","length","String","fromCharCode","join","generatePassword","textAlign","content","Message","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA8IeA,MAjIf,WAAgB,IAAD,EAC0CC,oBAAS,GADnD,mBACNC,EADM,KACmBC,EADnB,OAEsCF,oBAAS,GAF/C,mBAENG,EAFM,KAEiBC,EAFjB,OAGsCJ,oBAAS,GAH/C,mBAGNK,EAHM,KAGiBC,EAHjB,OAIyBN,mBAAS,IAJlC,mBAINO,EAJM,KAIWC,EAJX,KAMPC,EAAuBC,EAAmB,GAAI,IAC9CC,EAAuBD,EAAmB,GAAI,KAC9CE,EAAoBF,EAAmB,GAAI,IAC3CG,EAAoBH,EAAmB,GAAI,IAC9CI,OAAOJ,EAAmB,GAAI,KAC9BI,OAAOJ,EAAmB,GAAI,KAoCjC,SAASA,EAAmBK,EAAKC,GAE/B,IADA,IAAMC,EAAQ,GACLC,EAAIH,EAAKG,GAAKF,EAAME,IAC3BD,EAAME,KAAKD,GAEb,OAAOD,EAQT,OACE,kBAACG,EAAA,EAAD,CAASC,aAAW,GAClB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ,QAAUC,cAAc,OAC7C,kBAACH,EAAA,EAAKI,OAAN,CAAaH,MAAO,CAAEI,SAAU,MAC9B,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAM,SACpB,kBAACC,EAAA,EAAD,CAAMC,KAAK,cACX,kBAACJ,EAAA,EAAOK,QAAR,cAEE,kBAACL,EAAA,EAAOM,UAAR,sBAGJ,kBAACC,EAAA,EAAD,CAAMC,KAAK,QAAQb,MAAO,CAAEc,UAAW,SACrC,kBAAClB,EAAA,EAAD,KACE,kBAACgB,EAAA,EAAKG,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNC,MAAM,oBACNC,QAAS,kBACPzC,GAAqBD,OAI3B,kBAACmC,EAAA,EAAKG,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNC,MAAM,kBACNC,QAAS,kBAAMvC,GAAmBD,OAGtC,kBAACiC,EAAA,EAAKG,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNC,MAAM,kBACNC,QAAS,kBAAMrC,GAAmBD,OAGtC,kBAACuC,EAAA,EAAD,CACEb,MAAM,QACNc,OAAK,EACLR,KAAK,QACLM,QAzFQ,SAACG,GACvBA,EAAEC,iBACF,IAIMC,EASR,SACEC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAY1C,EACZuC,IAAkBG,EAAYA,EAAUvC,OAAOL,IAC/C2C,IAAgBC,EAAYA,EAAUvC,OAAOD,IAC7CsC,IAAgBE,EAAYA,EAAUvC,OAAOF,IAGjD,IADA,IAAM0C,EAAqB,GAClBpC,EAAI,EAAGA,EAAI+B,EAAiB/B,IAAK,CACxC,IAAMqC,EACJF,EAAUG,KAAKC,MAAMD,KAAKE,SAAWL,EAAUM,SACjDL,EAAmBnC,KAAKyC,OAAOC,aAAaN,IAE9C,OAAOD,EAAmBQ,KAAK,IA1BdC,CAJO,GACC9D,EACFE,EACAE,GAOvBG,EAAWwC,KAyEC,uBAUJ,kBAACnB,EAAA,EAAD,CACEC,GAAG,KACHC,MAAM,QACNiC,UAAU,SACVC,QAAS1D,MAKf,kBAACgB,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ,QAAUC,cAAc,UAC7C,kBAACH,EAAA,EAAKI,OAAN,CAAaH,MAAO,CAAEI,SAAU,MAC9B,kBAACsC,EAAA,EAAD,oCAC+B,IAC7B,uBAAGC,KAAK,mCAAR,8BCjIdC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8970dba7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Segment,\n  Container,\n  Button,\n  Checkbox,\n  Form,\n  Grid,\n  Header,\n  Icon,\n  Message,\n} from \"semantic-ui-react\";\n\nfunction App() {\n  const [includeUppercaseElement, setUppercaseElement] = useState(false);\n  const [includeNumbersElement, setNumbersElement] = useState(false);\n  const [includeSymbolsElement, setSymbolsElement] = useState(false);\n  const [passwordDisplay, setDisplay] = useState(\"\");\n\n  const UPPERCASE_CHAR_CODES = arrayFromLowToHigh(65, 90);\n  const LOWERCASE_CHAR_CODES = arrayFromLowToHigh(97, 122);\n  const NUMBER_CHAR_CODES = arrayFromLowToHigh(48, 57);\n  const SYMBOL_CHAR_CODES = arrayFromLowToHigh(33, 47)\n    .concat(arrayFromLowToHigh(58, 64))\n    .concat(arrayFromLowToHigh(91, 95));\n  const preparePassword = (e) => {\n    e.preventDefault();\n    const characterAmount = 12;\n    const includeUppercase = includeUppercaseElement;\n    const includeNumbers = includeNumbersElement;\n    const includeSymbols = includeSymbolsElement;\n    const password = generatePassword(\n      characterAmount,\n      includeUppercase,\n      includeNumbers,\n      includeSymbols\n    );\n    setDisplay(password);\n  };\n\n  function generatePassword(\n    characterAmount,\n    includeUppercase,\n    includeNumbers,\n    includeSymbols\n  ) {\n    let charCodes = LOWERCASE_CHAR_CODES;\n    if (includeUppercase) charCodes = charCodes.concat(UPPERCASE_CHAR_CODES);\n    if (includeSymbols) charCodes = charCodes.concat(SYMBOL_CHAR_CODES);\n    if (includeNumbers) charCodes = charCodes.concat(NUMBER_CHAR_CODES);\n\n    const passwordCharacters = [];\n    for (let i = 0; i < characterAmount; i++) {\n      const characterCode =\n        charCodes[Math.floor(Math.random() * charCodes.length)];\n      passwordCharacters.push(String.fromCharCode(characterCode));\n    }\n    return passwordCharacters.join(\"\");\n  }\n\n  function arrayFromLowToHigh(low, high) {\n    const array = [];\n    for (let i = low; i <= high; i++) {\n      array.push(i);\n    }\n    return array;\n  }\n\n  // function syncCharacterAmount(e) {\n  //   const value = e.target.value;\n  //   characterAmountNumber.value = value;\n  //   characterAmountRange.value = value;\n  // }\n  return (\n    <Segment placeholder>\n      <Container>\n        <Grid style={{ height: \"60vh\" }} verticalAlign=\"top\">\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"black\">\n              <Icon name=\"gitkraken\" />\n              <Header.Content>\n                Kraken\n                <Header.Subheader>Sail safely</Header.Subheader>\n              </Header.Content>\n            </Header>\n            <Form size=\"large\" style={{ marginTop: \"10vh\" }}>\n              <Segment>\n                <Form.Field>\n                  <Checkbox\n                    toggle\n                    label=\"Include uppercase\"\n                    onClick={() =>\n                      setUppercaseElement(!includeUppercaseElement)\n                    }\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <Checkbox\n                    toggle\n                    label=\"Include numbers\"\n                    onClick={() => setNumbersElement(!includeNumbersElement)}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <Checkbox\n                    toggle\n                    label=\"Include symbols\"\n                    onClick={() => setSymbolsElement(!includeSymbolsElement)}\n                  />\n                </Form.Field>\n                <Button\n                  color=\"black\"\n                  fluid\n                  size=\"large\"\n                  onClick={preparePassword}\n                >\n                  Generate password\n                </Button>\n              </Segment>\n            </Form>\n            <Header\n              as=\"h2\"\n              color=\"black\"\n              textAlign=\"center\"\n              content={passwordDisplay}\n              // style={{ margin: \"10vh 0 0 0 \" }}\n            ></Header>\n          </Grid.Column>\n        </Grid>\n        <Grid style={{ height: \"40vh\" }} verticalAlign=\"bottom\">\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Message>\n              Interested in collaboration?{\" \"}\n              <a href=\"https://github.com/tomaszpionka\"> Check out my github</a>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </Segment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}